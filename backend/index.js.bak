import express from "express"
import cors from "cors"
import XLSX  from 'xlsx'
import fs from 'fs'
import lockfile from 'proper-lockfile'

const app = express()

app.use(express.json())

app.use(cors())

app.get("/", (req, res) => {
    console.log('home page')
    res.json("Hello, this is backend")
})

app.get("/kanjitest", (req, res) => {})

app.post("/kanjitest", async (req, res) => {
    const today = new Date()
    const data = [{
        テスト日: `${today.getFullYear()}${today.getMonth() + 1}${today.getDate()}`,
        点数: `${req.body.scoreValue}/100`,
        経過時間: `${req.body.timeElapsed}`,
    }]
    const filePath = `C:/workspace/kanjitest/backend/exports/${req.body.employeeHireDate}.xlsx`
    const sheetName = `${req.body.employeeName}${req.body.employeeNumber}`

    if (await lockfile.check(filePath)) {
        console.log('file already locked')
        res.status(500).json({ message: `結果提出に失敗しました。しばらくしてお試しください。`})
        return
    } else {
        await lockfile.lock(filePath)
        console.log('file locked')
    }

    fs.access(filePath, fs.constants.F_OK, (err) => {
        if (err) {
            // File does not exist
            try {
                const wb = XLSX.utils.book_new()
                const ws = XLSX.utils.json_to_sheet(data)
                XLSX.utils.book_append_sheet(wb, ws, sheetName)
                XLSX.writeFile(wb, filePath)
                console.log('file created')
                res.status(201).json({ message: `結果を提出しました。`})
            } catch (error) {
                console.log(error)
                console.log('file creation failed')
                res.status(500).json({ message: `結果提出に失敗しました。しばらくしてお試しください。`})
            }
        } else {
            // File exists
            const wb = XLSX.readFile(filePath)
            // Sheet does not exist
            if (!wb.SheetNames.includes(sheetName)) {
                try {
                    const ws = XLSX.utils.json_to_sheet(data)
                    XLSX.utils.book_append_sheet(wb, ws, sheetName)
                    XLSX.writeFile(wb, filePath)
                    res.status(201).json({ message: `結果を提出しました。`})
                    console.log('sheet added to existing sheet')
                } catch (error) {
                    console.log(error)
                    console.log('sheet add failed')
                    res.status(500).json({ message: `結果提出に失敗しました。しばらくしてお試しください。`})
                }
            } else {
                // Sheet exists
                try {
                    const ws = wb.Sheets[sheetName]
                    const nextRowIndex = XLSX.utils.sheet_add_json(ws, data, { skipHeader: true, origin: -1 })
                    XLSX.writeFile(wb, filePath)
                    res.status(201).json({ message: `結果を提出しました。`})
                    console.log('sheet updated')
                } catch (error) {
                    console.log(error)
                    console.log('sheet update failed')
                    res.status(500).json({ message: `結果提出に失敗しました。しばらくしてお試しください。`})
                }
            }
        }
    })
    await lockfile.unlock(filePath)
    console.log('file unlocked')
})

app.listen(8080, () => {
    console.log("Connected to backend now")
})